{"version":3,"sources":["indexService.js","indexCtrl.js","navService.js","navCtrl.js","main.js","app.js"],"names":["indexService","r","login","i","Stamplay","User","then","res","user","$","modal","getResPorDia","err","console","log","data","usuario","codeblock","Codeblock","run","response","error","service","buscarPorDia","indexCtrl","$scope","$rootScope","AccountService","vm","this","material","init","collapse","credenciales","reservas","percentRes","percentDis","options","animate","duration","enabled","barColor","scaleColor","lineWidth","size","lineCap","labels","series","onClick","points","evt","datasetOverride","yAxisID","optionsLine","responsive","scales","yAxes","id","type","display","position","currentUser","Object","get","owner","_id","perfil","buscarReservasDia","estadisticasAnual","$digest","estadia","fecha","Date","getDate","getMonth","getFullYear","getHours","getMinutes","bootstrapMaterialDatePicker","format","date","navService","root","buscarDisponibilidad","filter","getParqueoUsuario","reservar","reserva","save","getParqueo","pId","navCtrl","validatePayphone","validate","montos","visibility","bool","prop","showDisponibilidad","parqueo","params","hD","hH","tV","TipoVehiculo","Puesto","Monto","calcularMonto","Parqueo","parseFloat","ValorXHoraL","ValorXHoraP","ValorXHoraM","formatHora","hora","split","replace","cambiarModoPago","tP","HoraDesde","HoraHasta","Estado","Usuario","addAlert","angular","module","factory","$q","def","defer","undefined","resolve","reject","promise","config","$stateProvider","$urlRouterProvider","otherwise","state","url","sticky","dsr","views","navView","templateUrl","controller","contentView"],"mappings":"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","file":"../app.js","sourcesContent":["angular.module('MiParking').factory('indexService', ['$rootScope',indexService]);\r\n\r\nfunction indexService(r) {\r\n    var service = {\r\n        buscarPorDia: getResPorDia,\r\n        login: login\r\n    };\r\n\r\n    return service;\r\n\r\n    // login con Stamplay\r\n    function login(i){\r\n        Stamplay.User.login(i)\r\n        .then(function(res) {\r\n          r.user = res;\r\n          $('#login-dialog').modal('hide');\r\n          return getResPorDia(res);\r\n        }, function(err) {\r\n          console.log(err);\r\n        })\r\n    }\r\n\r\n    // todas las reservas del dia\r\n    function getResPorDia(user){\r\n        if(user){\r\n    \t\tvar data = {usuario: user};\r\n    \t\t\r\n            var codeblock = new Stamplay.Codeblock(\"consultarreservas\");\r\n            return codeblock.run(data).then(function (response) {\r\n                return response;\r\n            }, function( err ){\r\n              console.error(err);\r\n                return null;\r\n            });\r\n        }else{\r\n        \t$('#login-dialog').modal();\r\n        }\r\n    }\r\n\r\n}","angular.module('MiParking').controller('indexCtrl',['$scope', '$rootScope', 'indexService', 'AccountService', indexCtrl]);\r\n\r\nfunction indexCtrl($scope, $rootScope, indexService, AccountService){\r\n\r\n\tvar vm = this;\r\n\r\n\t$.material.init();\r\n  $('#search').collapse(\"show\");\r\n\r\n  $scope.credenciales = {};\r\n  vm.reservas = [];\r\n\r\n  $scope.percentRes = 65;\r\n  $scope.percentDis = 35;\r\n\r\n  $scope.options = {\r\n    animate:{duration:1000,\r\n      enabled:true}, barColor:'RED', scaleColor: '#e8eff0', lineWidth:10, size:150, lineCap:'butt' \r\n    };\r\n\r\n  $scope.labels = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\r\n  $scope.series = ['Reservas'];\r\n  $scope.data = [];\r\n\r\n  $scope.onClick = function (points, evt) {\r\n    console.log(points, evt);\r\n  };\r\n\r\n  $scope.datasetOverride = [{ yAxisID: 'y-axis-1' }];\r\n\r\n  $scope.optionsLine = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          id: 'y-axis-1',\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left'\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  // busca si hay usuario logueado\r\n  AccountService.currentUser()\r\n  .then(function(user) {\r\n      if (user || $rootScope.user) {\r\n          $rootScope.user = user ? user : $rootScope.user;\r\n          Stamplay.Object(\"usuarios\").get({owner: $rootScope.user._id})\r\n              .then(function(res) {\r\n                  $rootScope.user.perfil = res.data[0];\r\n                  vm.buscarReservasDia();\r\n                  vm.estadisticasAnual();\r\n              }, function(err) {\r\n                  console.log(err);\r\n              });\r\n      }else{\r\n          console.log('No hay usuario logueado');\r\n          $('#login-dialog').modal();\r\n      }\r\n  });\r\n\r\n  // login con Stamplay\r\n  vm.login = function() {\r\n      indexService.login(vm.credenciales);\r\n  };\r\n\r\n  // obtiene todas las reserva del dia para el usuario logueado\r\n  vm.buscarReservasDia = function(){\r\n    indexService.buscarPorDia($rootScope.user).then(function(data) {\r\n      console.log(data);\r\n      vm.reservas = data;\r\n      $scope.$digest();\r\n    });\r\n  };\r\n\r\n  // busca estadísticas del año actual\r\n  vm.estadisticasAnual = function(){\r\n    var codeblock = new Stamplay.Codeblock(\"reservasanual\");\r\n    codeblock.run({}).then(function (response) {\r\n        $scope.data=[response];\r\n    }, function( err ){\r\n      console.error(err);\r\n    });\r\n  };\r\n\r\n\r\n  vm.estadia = function(i) {\r\n      var fecha = new Date(i);\r\n      return fecha.getDate() + '/' + fecha.getMonth() + '/' + fecha.getFullYear() + \" - \" + fecha.getHours() + ':' + (fecha.getMinutes() == 0 ? '00' : '30');\r\n  };\r\n\r\n  $('.hora').bootstrapMaterialDatePicker({format : 'DD/MM/YYYY HH:mm', date: false});\r\n}\r\n","angular.module('MiParking').factory('navService', ['$rootScope',navService]);\r\n\r\nfunction navService(root) {\r\n    var service = {\r\n        buscarDisponibilidad: buscarDisponibilidad,\r\n        getParqueoUsuario : getParqueoUsuario,\r\n        reservar : reservar,\r\n        getParqueo : getParqueo\r\n    };\r\n\r\n    return service;\r\n\r\n    function buscarDisponibilidad(filter){    \t\t\r\n        var codeblock = new Stamplay.Codeblock(\"consultadisponibilidadparqueo\");\r\n        return codeblock.run(filter).then(function (response) {\r\n            return response;\r\n        }, function( err ){\r\n          \tconsole.error(err);\r\n            return null;\r\n        })\r\n    }\r\n\r\n    function getParqueoUsuario(user){\r\n        return Stamplay.Object(\"usuarioparqueo\").get({usuario:user.id})\r\n        .then(function(res) {\r\n          return res;\r\n        }, function(err) {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function reservar(reserva){\r\n    \treturn Stamplay.Object(\"reservar\").save(reserva)\r\n        .then(function(res) {\r\n          return res;\r\n        }, function(err) {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function getParqueo(pId){\r\n    \treturn Stamplay.Object(\"parqueos\").get({_id:pId})\r\n    \t.then(function(res) {\r\n    \t\treturn res;\r\n      }, function( err ){\r\n          console.error(err);\r\n      })\r\n    }\r\n\r\n}","angular.module('MiParking').controller('navCtrl', ['$scope','$rootScope' , 'navService', 'AccountService', navCtrl]);\r\n\r\nfunction navCtrl($scope, $rootScope, navService){\r\n\r\n    var vm = this;\r\n\r\n    $.material.init();\r\n\r\n    vm.filter = {};\r\n    vm.reserva = {};\r\n    vm.validatePayphone = false;\r\n    vm.validate = false;\r\n    vm.montos = [];\r\n\r\n    visibility = function(bool){\r\n      $('#hd').prop('disabled',bool);\r\n      $('#hh').prop('disabled',bool);\r\n      $('#tv').prop('disabled',bool);\r\n      $('#search').collapse(!bool?\"show\":\"hide\");\r\n      $('#searchPanel').collapse(!bool?\"hide\":\"show\");\r\n    }\r\n\r\n    vm.showDisponibilidad = function () {\r\n      vm.filter = {};\r\n      vm.reserva = {};\r\n      vm.validatePayphone = false;\r\n      vm.validate = false;\r\n      visibility(false);\r\n      $('#busqueda-dialog').modal();\r\n    };\r\n\r\n    vm.buscarDisponibilidad = function () {\r\n        navService.getParqueoUsuario($rootScope.user).then(function(res) {\r\n          vm.filter.pId = res.data[0].parqueo;\r\n          var params = {hD: new Date(vm.filter.hD), hH: new Date(vm.filter.hH), tV: vm.reserva.TipoVehiculo, pId : vm.filter.pId};\r\n          navService.buscarDisponibilidad(params).then(function(data) {\r\n            if(data){\r\n              console.log(data);\r\n              vm.reserva.Puesto = data;\r\n              visibility(true);\r\n              vm.validate = true;\r\n              vm.reserva.Monto = calcularMonto();\r\n              $scope.$digest();\r\n            }\r\n          }, function( err ){\r\n              console.error(err);\r\n          });\r\n        }, function( err ){\r\n              console.error(err);\r\n        });\r\n    };\r\n\r\n    calcularMonto = function(){\r\n      navService.getParqueo(vm.filter.pId[0]).then(function(res){\r\n          vm.reserva.Parqueo = res.data[0]._id;\r\n          vm.montos = [parseFloat(res.data[0].ValorXHoraL), parseFloat(res.data[0].ValorXHoraP), parseFloat(res.data[0].ValorXHoraM)];\r\n          return (r.formatHora(vm.filter.hH) - r.formatHora(vm.filter.hD)) * vm.montos[vm.reserva.TipoVehiculo];\r\n      }, function(error){\r\n         console.log(error);\r\n      });\r\n    }\r\n\r\n    $rootScope.formatHora = function(hora) {\r\n      hora = hora.split(':');\r\n      return parseFloat(hora[0] + '.' + hora[1].replace('3', '5'));\r\n    };\r\n\r\n    vm.cambiarModoPago = function(){\r\n      if(vm.filter.tP == '0'){\r\n        $('#pagoPanel').collapse(\"hide\");\r\n        vm.validatePayphone = false;\r\n      }else{\r\n        $('#pagoPanel').collapse(\"show\");\r\n        vm.validatePayphone = true;\r\n      }\r\n    };\r\n\r\n    vm.reservar = function(){\r\n      vm.reserva.HoraDesde = new Date(vm.filter.hD);\r\n      vm.reserva.HoraHasta = new Date(vm.filter.hH);\r\n      vm.reserva.Estado = 'P'; //TODO VER FORMA DE PAGO CON CELULAR Y COMO SE VAN A MANEJAR LOS ESTADOS\r\n      vm.reserva.Usuario = $rootScope.user.id; // VER SI PAGA POR PAYPHONE (DE SER ASI SE PUEDE GUARDAR EL USUARIO DEL CLIENTE)\r\n      navService.reservar(vm.reserva).then(function(res) {\r\n        if(res){\r\n          addAlert();  \r\n        }\r\n      }, function( err ){\r\n          console.error(err);\r\n      });\r\n    };\r\n}"," ","angular.module('MiParking', ['ui.router', 'chart.js', 'easypiechart'])\r\n    .factory('AccountService', [\"$q\", function($q) {\r\n        return {\r\n            currentUser: function() {\r\n                var def = $q.defer();\r\n                Stamplay.User.currentUser()\r\n                    .then(function(response) {\r\n                        if (response.user === undefined) {\r\n                            def.resolve(false);\r\n                        } else {\r\n                            def.resolve(response.user);\r\n                        }\r\n                    }, function(error) {\r\n                        def.reject();\r\n                    });\r\n                return def.promise;\r\n            }\r\n        };\r\n    }])\r\n  .config(['$stateProvider','$urlRouterProvider',function($stateProvider, $urlRouterProvider) {\r\n      $urlRouterProvider.otherwise(\"/\");\r\n      $stateProvider\r\n      .state('home', {\r\n        url: '/',\r\n        sticky: true,\r\n        dsr: true,\r\n        views: {\r\n          'navView': {\r\n            templateUrl: 'templates/nav.html',\r\n            controller: 'navCtrl as ctrl'\r\n          },\r\n          'contentView': {\r\n            templateUrl: 'templates/index.html',\r\n            controller: 'indexCtrl as ctrl'\r\n          }\r\n        }\r\n      });\r\n    }]);"]}