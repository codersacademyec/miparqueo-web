{"version":3,"sources":["indexService.js","indexCtrl.js","navService.js","navCtrl.js","loginService.js","loginCtrl.js","main.js","app.js"],"names":["indexService","r","login","i","Stamplay","User","then","res","user","setRol","$","modal","err","console","log","deleteUser","remove","_id","Object","perfil","getRoles","data","length","givenRole","rol","name","error","service","indexCtrl","$scope","$rootScope","AccountService","vm","this","material","init","collapse","credenciales","reservas","usuariosparqueo","percentRes","percentDis","options","animate","duration","enabled","barColor","scaleColor","lineWidth","size","lineCap","labels","series","onClick","points","evt","datasetOverride","yAxisID","optionsLine","responsive","scales","yAxes","id","type","display","position","buscarReservasDia","buscarPorDia","$digest","estadisticasAnual","codeblock","Codeblock","run","response","buscarUsuariosParqueos","eliminarUsuario","estadia","fecha","Date","getDate","getMonth","getFullYear","getHours","getMinutes","esRolAdmin","esRolParqueo","bootstrapMaterialDatePicker","format","date","navService","root","buscarDisponibilidad","filter","getParqueoUsuario","get","usuario","reservar","reserva","save","getParqueo","pId","navCtrl","validatePayphone","validate","montos","newusuario","visibility","bool","prop","showDisponibilidad","parqueo","params","hD","hH","tV","TipoVehiculo","puestoParqueo","Monto","calcularMonto","Parqueo","parseFloat","ValorXHoraL","ValorXHoraP","ValorXHoraM","formatHora","hora","split","replace","cambiarModoPago","tP","HoraDesde","HoraHasta","Estado","Usuario","addAlert","cancelarReserva","confirmNewUser","logout","jwt","window","location","origin","localStorage","removeItem","loginService","getResPorDia","loginCtrl","currentUser","owner","getDatosRole","$apply","angular","module","factory","$q","def","defer","undefined","resolve","reject","promise","config","$stateProvider","$urlRouterProvider","otherwise","state","url","sticky","dsr","views","loginView","templateUrl","controller","navView","contentView"],"mappings":"AAEA,QAAAA,cAAAC,GAUA,QAAAC,GAAAC,GACA,MAAAC,UAAAC,KAAAH,MAAAC,GACAG,KAAA,SAAAC,GACAN,EAAAO,KAAAD,EACAE,IACAC,EAAA,iBAAAC,MAAA,SACA,SAAAC,GACAC,QAAAC,IAAAF,KAIA,QAAAG,GAAAP,GACAJ,SAAAC,KAAAW,OAAAR,EAAAS,KAAAX,KAAA,SAAAC,GACAH,SAAAc,OAAA,kBAAAF,QAAAC,IAAAT,EAAAW,OAAAF,MAAAX,KAAA,SAAAC,GACAM,QAAAC,IAAAP,IACA,SAAAK,GACAC,QAAAC,IAAAF,MAEA,SAAAA,GACAC,QAAAC,IAAAF,KAIA,QAAAH,KACA,MAAAL,UAAAC,KAAAe,WAAAd,KAAA,SAAAC,GACA,IAAA,GAAAJ,GAAAI,EAAAc,KAAAC,OAAA,EAAAnB,GAAA,EAAAA,IACAI,EAAAc,KAAAlB,GAAAc,KAAAhB,EAAAO,KAAAe,YACAtB,EAAAO,KAAAgB,IAAAjB,EAAAc,KAAAlB,GAAAsB,OAGA,SAAAb,GACAC,QAAAa,MAAAd,KAxCA,GAAAe,IACAzB,MAAAA,EACAa,WAAAA,EACAN,OAAAA,EAGA,OAAAkB,GCPA,QAAAC,WAAAC,EAAAC,EAAA9B,EAAA+B,GAEA,GAAAC,GAAAC,IAEAvB,GAAAwB,SAAAC,OACAzB,EAAA,WAAA0B,SAAA,QAEAP,EAAAQ,gBACAL,EAAAM,YACAN,EAAAO,mBAEAV,EAAAW,WAAA,GACAX,EAAAY,WAAA,GAEAZ,EAAAa,SACAC,SAAAC,SAAA,IACAC,SAAA,GAAAC,SAAA,MAAAC,WAAA,UAAAC,UAAA,GAAAC,KAAA,IAAAC,QAAA,QAGArB,EAAAsB,QAAA,QAAA,UAAA,QAAA,QAAA,OAAA,QAAA,QAAA,SAAA,aAAA,UAAA,YAAA,aACAtB,EAAAuB,QAAA,YACAvB,EAAAR,QAEAQ,EAAAwB,QAAA,SAAAC,EAAAC,GACA1C,QAAAC,IAAAwC,EAAAC,IAGA1B,EAAA2B,kBAAAC,QAAA,aAEA5B,EAAA6B,aACAC,YAAA,EACAC,QACAC,QAEAC,GAAA,WACAC,KAAA,SACAC,SAAA,EACAC,SAAA,WASAjC,EAAAkC,kBAAA,WACAlE,EAAAmE,aAAArC,EAAAtB,MAAAF,KAAA,SAAAe,GACAR,QAAAC,IAAAO,GACAW,EAAAM,SAAAjB,EACAQ,EAAAuC,aAKApC,EAAAqC,kBAAA,WACA,GAAAC,GAAA,GAAAlE,UAAAmE,UAAA,gBACAD,GAAAE,QAAAlE,KAAA,SAAAmE,GACA5C,EAAAR,MAAAoD,GACA5C,EAAAuC,WACA,SAAAxD,GACAC,QAAAa,MAAAd,MAKAoB,EAAA0C,uBAAA,WACA,GAAAJ,GAAA,GAAAlE,UAAAmE,UAAA,mBACAD,GAAAE,QAAAlE,KAAA,SAAAC,GACAM,QAAAC,IAAAP,GACAyB,EAAAO,gBAAAhC,EACAsB,EAAAuC,WACA,SAAAxD,GACAC,QAAAa,MAAAd,MAKAoB,EAAA2C,gBAAA,SAAAnE,GACAR,EAAAe,WAAAP,GAAAF,KAAA,SAAAe,GACAW,EAAA0C,4BAKA1C,EAAA4C,QAAA,SAAAzE,GACA,GAAA0E,GAAA,GAAAC,MAAA3E,EACA,OAAA0E,GAAAE,UAAA,IAAAF,EAAAG,WAAA,IAAAH,EAAAI,cAAA,MAAAJ,EAAAK,WAAA,KAAA,GAAAL,EAAAM,aAAA,KAAA,OAMArD,EAAAsD,WAAA,WACA,QAAAtD,EAAAtB,MACA,SAAAsB,EAAAtB,KAAAgB,KAMAM,EAAAuD,aAAA,WACA,QAAAvD,EAAAtB,MACA,WAAAsB,EAAAtB,KAAAgB,KAMAd,EAAA,SAAA4E,6BAAAC,OAAA,mBAAAC,MAAA,IC7GA,QAAAC,YAAAC,GAUA,QAAAC,GAAAC,GACA,GAAAtB,GAAA,GAAAlE,UAAAmE,UAAA,gCACA,OAAAD,GAAAE,IAAAoB,GAAAtF,KAAA,SAAAmE,GACA,MAAAA,IACA,SAAA7D,GAEA,MADAC,SAAAa,MAAAd,GACA,OAIA,QAAAiF,GAAArF,GACA,MAAAJ,UAAAc,OAAA,kBAAA4E,KAAAC,QAAAvF,EAAAsD,KACAxD,KAAA,SAAAC,GACA,MAAAA,IACA,SAAAK,GACAC,QAAAC,IAAAF,KAIA,QAAAoF,GAAAC,GACA,MAAA7F,UAAAc,OAAA,YAAAgF,KAAAD,GACA3F,KAAA,SAAAC,GACA,MAAAA,IACA,SAAAK,GACAC,QAAAC,IAAAF,KAIA,QAAAuF,GAAAC,GACA,MAAAhG,UAAAc,OAAA,YAAA4E,KAAA7E,IAAAmF,IACA9F,KAAA,SAAAC,GACA,MAAAA,IACA,SAAAK,GACAC,QAAAa,MAAAd,KA1CA,GAAAe,IACAgE,qBAAAA,EACAE,kBAAAA,EACAG,SAAAA,EACAG,WAAAA,EAGA,OAAAxE,GCRA,QAAA0E,SAAAxE,EAAAC,EAAA2D,GAEA,GAAAzD,GAAAC,IAEAvB,GAAAwB,SAAAC,OAEAH,EAAA4D,UACA5D,EAAAiE,WACAjE,EAAAsE,kBAAA,EACAtE,EAAAuE,UAAA,EACAvE,EAAAwE,UACAxE,EAAAyE,cAEAC,WAAA,SAAAC,GACAjG,EAAA,OAAAkG,KAAA,WAAAD,GACAjG,EAAA,OAAAkG,KAAA,WAAAD,GACAjG,EAAA,OAAAkG,KAAA,WAAAD,GACAjG,EAAA,WAAA0B,SAAAuE,EAAA,OAAA,QACAjG,EAAA,gBAAA0B,SAAAuE,EAAA,OAAA,SAGA3E,EAAA6E,mBAAA,WACA7E,EAAA4D,UACA5D,EAAAiE,WACAjE,EAAAsE,kBAAA,EACAtE,EAAAuE,UAAA,EACAG,YAAA,GACAhG,EAAA,oBAAAC,SAIAqB,EAAA2D,qBAAA,WACAF,EAAAI,kBAAA/D,EAAAtB,MAAAF,KAAA,SAAAC,GACAyB,EAAA4D,OAAAQ,IAAA7F,EAAAc,KAAA,GAAAyF,OACA,IAAAC,IAAAC,GAAA,GAAAlC,MAAA9C,EAAA4D,OAAAoB,IAAAC,GAAA,GAAAnC,MAAA9C,EAAA4D,OAAAqB,IAAAC,GAAAlF,EAAAiE,QAAAkB,aAAAf,IAAApE,EAAA4D,OAAAQ,IACAX,GAAAE,qBAAAoB,GAAAzG,KAAA,SAAAe,GACAA,IACAR,QAAAC,IAAAO,GACAW,EAAAiE,QAAAmB,cAAA/F,EACAqF,YAAA,GACA1E,EAAAuE,UAAA,EACAvE,EAAAiE,QAAAoB,MAAAC,gBACAzF,EAAAuC,YAEA,SAAAxD,GACAC,QAAAa,MAAAd,MAEA,SAAAA,GACAC,QAAAa,MAAAd,MAKA0G,cAAA,WACA7B,EAAAU,WAAAnE,EAAA4D,OAAAQ,IAAA,IAAA9F,KAAA,SAAAC,GAGA,MAFAyB,GAAAiE,QAAAsB,QAAAhH,EAAAc,KAAA,GAAAJ,IACAe,EAAAwE,QAAAgB,WAAAjH,EAAAc,KAAA,GAAAoG,aAAAD,WAAAjH,EAAAc,KAAA,GAAAqG,aAAAF,WAAAjH,EAAAc,KAAA,GAAAsG,eACA1H,EAAA2H,WAAA5F,EAAA4D,OAAAqB,IAAAhH,EAAA2H,WAAA5F,EAAA4D,OAAAoB,KAAAhF,EAAAwE,OAAAxE,EAAAiE,QAAAkB,eACA,SAAAzF,GACAb,QAAAC,IAAAY,MAKAI,EAAA8F,WAAA,SAAAC,GAEA,MADAA,GAAAA,EAAAC,MAAA,KACAN,WAAAK,EAAA,GAAA,IAAAA,EAAA,GAAAE,QAAA,IAAA,OAKA/F,EAAAgG,gBAAA,WACA,KAAAhG,EAAA4D,OAAAqC,IACAvH,EAAA,cAAA0B,SAAA,QACAJ,EAAAsE,kBAAA,IAEA5F,EAAA,cAAA0B,SAAA,QACAJ,EAAAsE,kBAAA,IAKAtE,EAAAgE,SAAA,WACAhE,EAAAiE,QAAAiC,UAAA,GAAApD,MAAA9C,EAAA4D,OAAAoB,IACAhF,EAAAiE,QAAAkC,UAAA,GAAArD,MAAA9C,EAAA4D,OAAAqB,IACAjF,EAAAiE,QAAAmC,OAAA,IACApG,EAAAiE,QAAAoC,QAAAvG,EAAAtB,KAAAsD,GACA2B,EAAAO,SAAAhE,EAAAiE,SAAA3F,KAAA,SAAAC,GACAA,GACA+H,SAAA,mDAEA,SAAA1H,GACAC,QAAAa,MAAAd,MAKAoB,EAAAuG,gBAAA,SAAAtC,KAMAjE,EAAAwG,eAAA,WAEA9H,EAAA,eAAAC,MAAA,SAGAmB,EAAA2G,OAAA,WACA,GAAAC,GAAAC,OAAAC,SAAAC,OAAA,MACAF,QAAAG,aAAAC,WAAAL,GACA5G,EAAAtB,MAAA,GC/GA,QAAAwI,cAAA/I,GASA,QAAAC,GAAAC,GACA,MAAAC,UAAAC,KAAAH,MAAAC,GACAG,KAAA,SAAAC,GACAN,EAAAO,KAAAD,EACAE,IACAC,EAAA,iBAAAC,MAAA,SACA,SAAAC,GACAC,QAAAC,IAAAF,KAIA,QAAAH,KACA,MAAAL,UAAAC,KAAAe,WAAAd,KAAA,SAAAC,GACA,IAAA,GAAAJ,GAAAI,EAAAc,KAAAC,OAAA,EAAAnB,GAAA,EAAAA,IACAI,EAAAc,KAAAlB,GAAAc,KAAAhB,EAAAO,KAAAe,YACAtB,EAAAO,KAAAgB,IAAAjB,EAAAc,KAAAlB,GAAAsB,OAGA,SAAAb,GACAC,QAAAa,MAAAd,KAKA,QAAAqI,GAAAzI,GACA,GAAAA,EAAA,CACA,GAAAa,IAAA0E,QAAAvF,GAEA8D,EAAA,GAAAlE,UAAAmE,UAAA,oBACA,OAAAD,GAAAE,IAAAnD,GAAAf,KAAA,SAAAmE,GACA,MAAAA,IACA,SAAA7D,GAEA,MADAC,SAAAa,MAAAd,GACA,OAGAF,EAAA,iBAAAC,QA5CA,GAAAgB,IACAwC,aAAA8E,EACA/I,MAAAA,EACAO,OAAAA,EAEA,OAAAkB,GCNA,QAAAuH,WAAArH,EAAAC,EAAAkH,EAAAjH,GAEA,GAAAC,GAAAC,IACAvB,GAAAwB,SAAAC,OAEAJ,EAAAoH,cACA7I,KAAA,SAAAE,GACAA,GAAAsB,EAAAtB,MACAsB,EAAAtB,KAAAA,EAAAA,EAAAsB,EAAAtB,KACAJ,SAAAc,OAAA,YAAA4E,KAAAsD,MAAAtH,EAAAtB,KAAAS,MACAX,KAAA,SAAAC,GACAuB,EAAAtB,KAAAW,OAAAZ,EAAAc,KAAA,GACAW,EAAAvB,UACA,SAAAG,GACAC,QAAAC,IAAAF,MAGAC,QAAAC,IAAA,6BAKAkB,EAAA9B,MAAA,WACA8I,EAAA9I,MAAA8B,EAAAK,cAAA/B,KAAA,SAAAC,GACA8I,eACAvH,EAAAsC,aAKApC,EAAAvB,OAAA,WACAuI,EAAAvI,SAAAH,KAAA,SAAAC,GACA8I,eACAvH,EAAAsC,aAKAiF,aAAA,WACAxH,EAAAyH,SACA,SAAAxH,EAAAtB,KAAAgB,IACAQ,EAAA0C,0BAEA1C,EAAAkC,oBACAlC,EAAAqC,sBAKArC,EAAAkC,kBAAA,WACA8E,EAAA7E,aAAArC,EAAAtB,MAAAF,KAAA,SAAAe,GACAR,QAAAC,IAAAO,GACAS,EAAAQ,SAAAjB,EACAQ,EAAAuC,aAKApC,EAAAqC,kBAAA,WACA,GAAAC,GAAA,GAAAlE,UAAAmE,UAAA,gBACAD,GAAAE,QAAAlE,KAAA,SAAAmE,GACA5C,EAAAR,MAAAoD,GACA5C,EAAAuC,WACA,SAAAxD,GACAC,QAAAa,MAAAd,MAKAoB,EAAA0C,uBAAA,WACA,GAAAJ,GAAA,GAAAlE,UAAAmE,UAAA,mBACAD,GAAAE,QAAAlE,KAAA,SAAAC,GACAM,QAAAC,IAAAP,GACAuB,EAAAS,gBAAAhC,EACAsB,EAAAuC,WACA,SAAAxD,GACAC,QAAAa,MAAAd,MC9EA2I,QAAAC,OAAA,aAAA,YAAA,WAAA,iBCAAC,QAAA,kBAAA,KAAA,SAAAC,GACA,OACAP,YAAA,WACA,GAAAQ,GAAAD,EAAAE,OAWA,OAVAxJ,UAAAC,KAAA8I,cACA7I,KAAA,SAAAmE,GACAoF,SAAApF,EAAAjE,KACAmJ,EAAAG,SAAA,GAEAH,EAAAG,QAAArF,EAAAjE,OAEA,SAAAkB,GACAiI,EAAAI,WAEAJ,EAAAK,aAIAC,QAAA,iBAAA,qBAAA,SAAAC,EAAAC,GACAA,EAAAC,UAAA,KACAF,EACAG,MAAA,QACAC,IAAA,IACAC,QAAA,EACAC,KAAA,EACAC,OACAC,WACAC,YAAA,uBACAC,WAAA,qBAEAC,SACAF,YAAA,qBACAC,WAAA,mBAEAE,aACAH,YAAA,uBACAC,WAAA,2BPpCArB,QAAAC,OAAA,aAAAC,QAAA,gBAAA,aAAAzJ,eCAAuJ,QAAAC,OAAA,aAAAoB,WAAA,aAAA,SAAA,aAAA,eAAA,iBAAAhJ,YCAA2H,QAAAC,OAAA,aAAAC,QAAA,cAAA,aAAAhE,aCAA8D,QAAAC,OAAA,aAAAoB,WAAA,WAAA,SAAA,aAAA,aAAA,iBAAAvE,UCAAkD,QAAAC,OAAA,aAAAC,QAAA,gBAAA,aAAAT,eCAAO,QAAAC,OAAA,aAAAoB,WAAA,aAAA,SAAA,aAAA,eAAA,iBAAA1B","file":"../app.js","sourcesContent":["angular.module('MiParking').factory('indexService', ['$rootScope',indexService]);\r\n\r\nfunction indexService(r) {\r\n    var service = {\r\n        login: login,\r\n        deleteUser : deleteUser,\r\n        setRol : setRol\r\n    };\r\n\r\n    return service;\r\n\r\n    // login con Stamplay\r\n    function login(i){\r\n        return Stamplay.User.login(i)\r\n        .then(function(res) {\r\n          r.user = res;\r\n          setRol();\r\n          $('#login-dialog').modal('hide');        \r\n        }, function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    function deleteUser(user){\r\n        Stamplay.User.remove(user._id).then(function(res) {\r\n            Stamplay.Object(\"usuarioparqueo\").remove({_id:user.perfil._id}).then(function(res) {\r\n                console.log(res);\r\n            }, function(err) {\r\n                console.log(err);\r\n            })\r\n        }, function(err) {\r\n          console.log(err);\r\n        })\r\n    }\r\n\r\n    function setRol(){\r\n        return Stamplay.User.getRoles().then(function(res) {\r\n        for (var i = res.data.length - 1; i >= 0; i--) {\r\n          if(res.data[i]._id == r.user.givenRole){\r\n            r.user.rol = res.data[i].name;\r\n          }\r\n        }\r\n      }, function(err) {\r\n        console.error(err);\r\n      });\r\n    }\r\n\r\n}","angular.module('MiParking').controller('indexCtrl',['$scope', '$rootScope', 'indexService', 'AccountService', indexCtrl]);\r\n\r\nfunction indexCtrl($scope, $rootScope, indexService, AccountService){\r\n\r\n\tvar vm = this;\r\n\r\n\t$.material.init();\r\n  $('#search').collapse(\"show\");\r\n\r\n  $scope.credenciales = {};\r\n  vm.reservas = [];\r\n  vm.usuariosparqueo = [];\r\n\r\n  $scope.percentRes = 65;\r\n  $scope.percentDis = 35;\r\n\r\n  $scope.options = {\r\n    animate:{duration:1000,\r\n      enabled:true}, barColor:'RED', scaleColor: '#e8eff0', lineWidth:10, size:150, lineCap:'butt' \r\n    };\r\n\r\n  $scope.labels = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\r\n  $scope.series = ['Reservas'];\r\n  $scope.data = [];\r\n\r\n  $scope.onClick = function (points, evt) {\r\n    console.log(points, evt);\r\n  };\r\n\r\n  $scope.datasetOverride = [{ yAxisID: 'y-axis-1' }];\r\n\r\n  $scope.optionsLine = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          id: 'y-axis-1',\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left'\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // obtiene todas las reserva del dia para el usuario logueado\r\n  vm.buscarReservasDia = function(){\r\n    indexService.buscarPorDia($rootScope.user).then(function(data) {\r\n      console.log(data);\r\n      vm.reservas = data;\r\n      $scope.$digest();\r\n    });\r\n  };\r\n\r\n  // busca estadísticas del año actual\r\n  vm.estadisticasAnual = function(){\r\n    var codeblock = new Stamplay.Codeblock(\"reservasanual\");\r\n    codeblock.run({}).then(function (response) {\r\n        $scope.data=[response];\r\n        $scope.$digest();\r\n    }, function( err ){\r\n      console.error(err);\r\n    });\r\n  };\r\n\r\n  // busca usuarios con rol parqueo\r\n  vm.buscarUsuariosParqueos = function(){\r\n    var codeblock = new Stamplay.Codeblock(\"usuariosparqueos\");\r\n    codeblock.run({}).then(function (res) {\r\n        console.log(res);\r\n        vm.usuariosparqueo = res;\r\n        $scope.$digest();\r\n    }, function( err ){\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  // elimina usuarios con rol parqueo\r\n  vm.eliminarUsuario = function(user){\r\n    indexService.deleteUser(user).then(function(data) {\r\n      vm.buscarUsuariosParqueos();\r\n    });\r\n  }\r\n\r\n  // da formato de fecha hora\r\n  vm.estadia = function(i) {\r\n      var fecha = new Date(i);\r\n      return fecha.getDate() + '/' + fecha.getMonth() + '/' + fecha.getFullYear() + \" - \" + fecha.getHours() + ':' + (fecha.getMinutes() == 0 ? '00' : '30');\r\n  };\r\n\r\n\r\n  // FLAGS\r\n\r\n  $rootScope.esRolAdmin = function(){\r\n    if($rootScope.user){\r\n      return ($rootScope.user.rol == 'admin');\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  $rootScope.esRolParqueo = function(){\r\n    if($rootScope.user){\r\n      return ($rootScope.user.rol == 'parqueo');\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  $('.hora').bootstrapMaterialDatePicker({format : 'DD/MM/YYYY HH:mm', date: false});\r\n}\r\n","angular.module('MiParking').factory('navService', ['$rootScope',navService]);\r\n\r\nfunction navService(root) {\r\n    var service = {\r\n        buscarDisponibilidad: buscarDisponibilidad,\r\n        getParqueoUsuario : getParqueoUsuario,\r\n        reservar : reservar,\r\n        getParqueo : getParqueo\r\n    };\r\n\r\n    return service;\r\n\r\n    function buscarDisponibilidad(filter){    \t\t\r\n        var codeblock = new Stamplay.Codeblock(\"consultadisponibilidadparqueo\");\r\n        return codeblock.run(filter).then(function (response) {\r\n            return response;\r\n        }, function( err ){\r\n          \tconsole.error(err);\r\n            return null;\r\n        })\r\n    }\r\n\r\n    function getParqueoUsuario(user){\r\n        return Stamplay.Object(\"usuarioparqueo\").get({usuario:user.id})\r\n        .then(function(res) {\r\n          return res;\r\n        }, function(err) {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function reservar(reserva){\r\n    \treturn Stamplay.Object(\"reservar\").save(reserva)\r\n        .then(function(res) {\r\n          return res;\r\n        }, function(err) {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function getParqueo(pId){\r\n    \treturn Stamplay.Object(\"parqueos\").get({_id:pId})\r\n    \t.then(function(res) {\r\n    \t\treturn res;\r\n      }, function( err ){\r\n          console.error(err);\r\n      })\r\n    }\r\n\r\n}","angular.module('MiParking').controller('navCtrl', ['$scope','$rootScope' , 'navService', 'AccountService', navCtrl]);\r\n\r\nfunction navCtrl($scope, $rootScope, navService){\r\n\r\n    var vm = this;\r\n\r\n    $.material.init();\r\n\r\n    vm.filter = {};\r\n    vm.reserva = {};\r\n    vm.validatePayphone = false;\r\n    vm.validate = false;\r\n    vm.montos = [];\r\n    vm.newusuario = {};\r\n\r\n    visibility = function(bool){\r\n      $('#hd').prop('disabled',bool);\r\n      $('#hh').prop('disabled',bool);\r\n      $('#tv').prop('disabled',bool);\r\n      $('#search').collapse(!bool?\"show\":\"hide\");\r\n      $('#searchPanel').collapse(!bool?\"hide\":\"show\");\r\n    }\r\n\r\n    vm.showDisponibilidad = function () {\r\n      vm.filter = {};\r\n      vm.reserva = {};\r\n      vm.validatePayphone = false;\r\n      vm.validate = false;\r\n      visibility(false);\r\n      $('#busqueda-dialog').modal();\r\n    };\r\n\r\n    // busca disponibilidad para reserva para el parqueo actual\r\n    vm.buscarDisponibilidad = function () {\r\n        navService.getParqueoUsuario($rootScope.user).then(function(res) {\r\n          vm.filter.pId = res.data[0].parqueo;\r\n          var params = {hD: new Date(vm.filter.hD), hH: new Date(vm.filter.hH), tV: vm.reserva.TipoVehiculo, pId : vm.filter.pId};\r\n          navService.buscarDisponibilidad(params).then(function(data) {\r\n            if(data){\r\n              console.log(data);\r\n              vm.reserva.puestoParqueo = data;\r\n              visibility(true);\r\n              vm.validate = true;\r\n              vm.reserva.Monto = calcularMonto();\r\n              $scope.$digest();\r\n            }\r\n          }, function( err ){\r\n              console.error(err);\r\n          });\r\n        }, function( err ){\r\n              console.error(err);\r\n        });\r\n    };\r\n\r\n    // calcula el monto del parqueo a reservar\r\n    calcularMonto = function(){\r\n      navService.getParqueo(vm.filter.pId[0]).then(function(res){\r\n          vm.reserva.Parqueo = res.data[0]._id;\r\n          vm.montos = [parseFloat(res.data[0].ValorXHoraL), parseFloat(res.data[0].ValorXHoraP), parseFloat(res.data[0].ValorXHoraM)];\r\n          return (r.formatHora(vm.filter.hH) - r.formatHora(vm.filter.hD)) * vm.montos[vm.reserva.TipoVehiculo];\r\n      }, function(error){\r\n         console.log(error);\r\n      });\r\n    }\r\n\r\n    // formato hora\r\n    $rootScope.formatHora = function(hora) {\r\n      hora = hora.split(':');\r\n      return parseFloat(hora[0] + '.' + hora[1].replace('3', '5'));\r\n    };\r\n\r\n\r\n    // segun modo de pago, visibilidad en pantalla\r\n    vm.cambiarModoPago = function(){\r\n      if(vm.filter.tP == '0'){\r\n        $('#pagoPanel').collapse(\"hide\");\r\n        vm.validatePayphone = false;\r\n      }else{\r\n        $('#pagoPanel').collapse(\"show\");\r\n        vm.validatePayphone = true;\r\n      }\r\n    };\r\n\r\n    // reserva un parqueo\r\n    vm.reservar = function(){\r\n      vm.reserva.HoraDesde = new Date(vm.filter.hD);\r\n      vm.reserva.HoraHasta = new Date(vm.filter.hH);\r\n      vm.reserva.Estado = 'P'; //TODO VER FORMA DE PAGO CON CELULAR Y COMO SE VAN A MANEJAR LOS ESTADOS\r\n      vm.reserva.Usuario = $rootScope.user.id; // VER SI PAGA POR PAYPHONE (DE SER ASI SE PUEDE GUARDAR EL USUARIO DEL CLIENTE)\r\n      navService.reservar(vm.reserva).then(function(res) {\r\n        if(res){\r\n          addAlert('La reserva se ha registrado de manera exitosa.');  \r\n        }\r\n      }, function( err ){\r\n          console.error(err);\r\n      });\r\n    };\r\n\r\n    // TODO Cancela una reserva\r\n    vm.cancelarReserva = function(reserva){\r\n\r\n    };\r\n\r\n\r\n    // confirma alta de usuario de tipo parqueo\r\n    vm.confirmNewUser = function(){\r\n      \r\n      $('user-dialog').modal('hide');\r\n    }\r\n\r\n    $rootScope.logout = function(){\r\n        var jwt = window.location.origin + \"-jwt\";\r\n        window.localStorage.removeItem(jwt);\r\n        $rootScope.user = false;\r\n    }\r\n}","angular.module('MiParking').factory('loginService', ['$rootScope',loginService]);\r\n\r\nfunction loginService(r) {\r\n    var service = {\r\n        buscarPorDia: getResPorDia,\r\n        login: login,\r\n        setRol : setRol\r\n    };\r\n     return service;\r\n\r\n    // login con Stamplay\r\n    function login(i){\r\n        return Stamplay.User.login(i)\r\n        .then(function(res) {\r\n          r.user = res;\r\n          setRol();\r\n          $('#login-dialog').modal('hide');        \r\n        }, function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n    \r\n    function setRol(){\r\n        return Stamplay.User.getRoles().then(function(res) {\r\n        for (var i = res.data.length - 1; i >= 0; i--) {\r\n          if(res.data[i]._id == r.user.givenRole){\r\n            r.user.rol = res.data[i].name;\r\n          }\r\n        }\r\n      }, function(err) {\r\n        console.error(err);\r\n      });\r\n    }\r\n\r\n    // todas las reservas del dia\r\n    function getResPorDia(user){\r\n        if(user){\r\n        var data = {usuario: user};\r\n        \r\n            var codeblock = new Stamplay.Codeblock(\"consultarreservas\");\r\n            return codeblock.run(data).then(function (response) {\r\n                return response;\r\n            }, function( err ){\r\n              console.error(err);\r\n                return null;\r\n            });\r\n        }else{\r\n          $('#login-dialog').modal();\r\n        }\r\n    }\r\n\r\n   AccountService.currentUser()\r\n  .then(function(user) {\r\n      if (user || $rootScope.user) {\r\n          $rootScope.user = user ? user : $rootScope.user;\r\n          Stamplay.Object(\"usuarios\").get({owner: $rootScope.user._id})\r\n              .then(function(res) {\r\n                  $rootScope.user.perfil = res.data[0];\r\n                  vm.setRol();\r\n              }, function(err) {\r\n                  console.log(err);\r\n              });\r\n      }else{\r\n          console.log('No hay usuario logueado');\r\n          $('#login-dialog').modal();\r\n      }\r\n  });\r\n}","angular.module('MiParking').controller('loginCtrl',['$scope', '$rootScope', 'loginService', 'AccountService', loginCtrl]);\r\n\r\nfunction loginCtrl($scope, $rootScope, loginService, AccountService){\r\n\r\n\tvar vm = this;\r\n\t$.material.init();\r\n\t  // busca si hay usuario logueado\r\n  AccountService.currentUser()\r\n  .then(function(user) {\r\n      if (user || $rootScope.user) {\r\n          $rootScope.user = user ? user : $rootScope.user;\r\n          Stamplay.Object(\"usuarios\").get({owner: $rootScope.user._id})\r\n              .then(function(res) {\r\n                  $rootScope.user.perfil = res.data[0];\r\n                  vm.setRol();\r\n              }, function(err) {\r\n                  console.log(err);\r\n              });\r\n      }else{\r\n          console.log('No hay usuario logueado');\r\n      }\r\n  });\r\n\r\n  // login con Stamplay\r\n  vm.login = function() {\r\n      loginService.login(vm.credenciales).then(function(res){\r\n        getDatosRole();\r\n        $rootScope.$digest();\r\n      });\r\n  };\r\n\r\n  // busca el tipo de rol del usuario logueado\r\n  vm.setRol = function(){\r\n    loginService.setRol().then(function(res){\r\n        getDatosRole();\r\n        $rootScope.$digest();\r\n    });\r\n  };\r\n\r\n  // obtiene la informacion del usuario segun el rol\r\n  getDatosRole = function(){\r\n    $scope.$apply();\r\n    if($rootScope.user.rol == 'admin'){\r\n      vm.buscarUsuariosParqueos();\r\n    }else{\r\n      vm.buscarReservasDia();\r\n      vm.estadisticasAnual();\r\n    }\r\n  };\r\n\r\n// obtiene todas las reserva del dia para el usuario logueado\r\n  vm.buscarReservasDia = function(){\r\n    loginService.buscarPorDia($rootScope.user).then(function(data) {\r\n      console.log(data);\r\n      $rootScope.reservas = data;\r\n      $scope.$digest();\r\n    });\r\n  };\r\n\r\n  // busca estadísticas del año actual\r\n  vm.estadisticasAnual = function(){\r\n    var codeblock = new Stamplay.Codeblock(\"reservasanual\");\r\n    codeblock.run({}).then(function (response) {\r\n        $scope.data=[response];\r\n        $scope.$digest();\r\n    }, function( err ){\r\n      console.error(err);\r\n    });\r\n  };\r\n\r\n  // busca usuarios con rol parqueo\r\n  vm.buscarUsuariosParqueos = function(){\r\n    var codeblock = new Stamplay.Codeblock(\"usuariosparqueos\");\r\n    codeblock.run({}).then(function (res) {\r\n        console.log(res);\r\n        $rootScope.usuariosparqueo = res;\r\n        $scope.$digest();\r\n    }, function( err ){\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n}"," ","angular.module('MiParking', ['ui.router', 'chart.js', 'easypiechart'])\r\n    .factory('AccountService', [\"$q\", function($q) {\r\n        return {\r\n            currentUser: function() {\r\n                var def = $q.defer();\r\n                Stamplay.User.currentUser()\r\n                    .then(function(response) {\r\n                        if (response.user === undefined) {\r\n                            def.resolve(false);\r\n                        } else {\r\n                            def.resolve(response.user);\r\n                        }\r\n                    }, function(error) {\r\n                        def.reject();\r\n                    });\r\n                return def.promise;\r\n            }\r\n        };\r\n    }])\r\n  .config(['$stateProvider','$urlRouterProvider',function($stateProvider, $urlRouterProvider) {\r\n      $urlRouterProvider.otherwise(\"/\");\r\n      $stateProvider\r\n      .state('home', {\r\n        url: '/',\r\n        sticky: true,\r\n        dsr: true,\r\n        views: {\r\n          'loginView': {\r\n            templateUrl: 'templates/login.html',\r\n            controller: 'loginCtrl as ctrl'\r\n          },\r\n          'navView': {\r\n            templateUrl: 'templates/nav.html',\r\n            controller: 'navCtrl as ctrl'\r\n          },\r\n          'contentView': {\r\n            templateUrl: 'templates/index.html',\r\n            controller: 'indexCtrl as ctrl'\r\n          }\r\n        }\r\n      });\r\n    }]);"]}