{"version":3,"sources":["indexService.js","indexCtrl.js","navService.js","navCtrl.js","loginService.js","loginCtrl.js","main.js","app.js"],"names":["indexService","r","login","i","Stamplay","User","then","res","user","setRol","$","modal","err","console","log","getResPorDia","data","usuario","codeblock","Codeblock","run","response","error","deleteUser","remove","_id","Object","perfil","getRoles","length","givenRole","rol","name","service","buscarPorDia","indexCtrl","$scope","$rootScope","AccountService","vm","this","material","init","collapse","credenciales","reservas","usuariosparqueo","percentRes","percentDis","options","animate","duration","enabled","barColor","scaleColor","lineWidth","size","lineCap","labels","series","onClick","points","evt","datasetOverride","yAxisID","optionsLine","responsive","scales","yAxes","id","type","display","position","buscarReservasDia","$digest","estadisticasAnual","buscarUsuariosParqueos","eliminarUsuario","estadia","fecha","Date","getDate","getMonth","getFullYear","getHours","getMinutes","esRolAdmin","esRolParqueo","bootstrapMaterialDatePicker","format","date","navService","root","buscarDisponibilidad","filter","getParqueoUsuario","get","reservar","reserva","save","getParqueo","pId","navCtrl","validatePayphone","validate","montos","newusuario","visibility","bool","prop","showDisponibilidad","parqueo","params","hD","hH","tV","TipoVehiculo","puestoParqueo","Monto","calcularMonto","Parqueo","parseFloat","ValorXHoraL","ValorXHoraP","ValorXHoraM","formatHora","hora","split","replace","cambiarModoPago","tP","HoraDesde","HoraHasta","Estado","Usuario","addAlert","cancelarReserva","confirmNewUser","logout","jwt","window","location","origin","localStorage","removeItem","loginService","loginCtrl","currentUser","owner","getDatosRole","$apply","angular","module","factory","$q","def","defer","undefined","resolve","reject","promise","config","$stateProvider","$urlRouterProvider","otherwise","state","url","sticky","dsr","views","loginView","templateUrl","controller","navView","contentView"],"mappings":"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","file":"../app.js","sourcesContent":["angular.module('MiParking').factory('indexService', ['$rootScope',indexService]);\r\n\r\nfunction indexService(r) {\r\n    var service = {\r\n        buscarPorDia: getResPorDia,\r\n        login: login,\r\n        deleteUser : deleteUser,\r\n        setRol : setRol\r\n    };\r\n\r\n    return service;\r\n\r\n    // login con Stamplay\r\n    function login(i){\r\n        return Stamplay.User.login(i)\r\n        .then(function(res) {\r\n          r.user = res;\r\n          setRol();\r\n          $('#login-dialog').modal('hide');        \r\n        }, function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n\r\n    // todas las reservas del dia\r\n    function getResPorDia(user){\r\n        if(user){\r\n    \t\tvar data = {usuario: user};\r\n    \t\t\r\n            var codeblock = new Stamplay.Codeblock(\"consultarreservas\");\r\n            return codeblock.run(data).then(function (response) {\r\n                return response;\r\n            }, function( err ){\r\n              console.error(err);\r\n                return null;\r\n            });\r\n        }else{\r\n        \t$('#login-dialog').modal();\r\n        }\r\n    }\r\n\r\n    function deleteUser(user){\r\n        Stamplay.User.remove(user._id).then(function(res) {\r\n            Stamplay.Object(\"usuarioparqueo\").remove({_id:user.perfil._id}).then(function(res) {\r\n                console.log(res);\r\n            }, function(err) {\r\n                console.log(err);\r\n            })\r\n        }, function(err) {\r\n          console.log(err);\r\n        })\r\n    }\r\n\r\n    function setRol(){\r\n        return Stamplay.User.getRoles().then(function(res) {\r\n        for (var i = res.data.length - 1; i >= 0; i--) {\r\n          if(res.data[i]._id == r.user.givenRole){\r\n            r.user.rol = res.data[i].name;\r\n          }\r\n        }\r\n      }, function(err) {\r\n        console.error(err);\r\n      });\r\n    }\r\n\r\n}","angular.module('MiParking').controller('indexCtrl',['$scope', '$rootScope', 'indexService', 'AccountService', indexCtrl]);\r\n\r\nfunction indexCtrl($scope, $rootScope, indexService, AccountService){\r\n\r\n\tvar vm = this;\r\n\r\n\t$.material.init();\r\n  $('#search').collapse(\"show\");\r\n\r\n  $scope.credenciales = {};\r\n  vm.reservas = [];\r\n  vm.usuariosparqueo = [];\r\n\r\n  $scope.percentRes = 65;\r\n  $scope.percentDis = 35;\r\n\r\n  $scope.options = {\r\n    animate:{duration:1000,\r\n      enabled:true}, barColor:'RED', scaleColor: '#e8eff0', lineWidth:10, size:150, lineCap:'butt' \r\n    };\r\n\r\n  $scope.labels = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\r\n  $scope.series = ['Reservas'];\r\n  $scope.data = [];\r\n\r\n  $scope.onClick = function (points, evt) {\r\n    console.log(points, evt);\r\n  };\r\n\r\n  $scope.datasetOverride = [{ yAxisID: 'y-axis-1' }];\r\n\r\n  $scope.optionsLine = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          id: 'y-axis-1',\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left'\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n\r\n\r\n  // obtiene todas las reserva del dia para el usuario logueado\r\n  vm.buscarReservasDia = function(){\r\n    indexService.buscarPorDia($rootScope.user).then(function(data) {\r\n      console.log(data);\r\n      vm.reservas = data;\r\n      $scope.$digest();\r\n    });\r\n  };\r\n\r\n  // busca estadísticas del año actual\r\n  vm.estadisticasAnual = function(){\r\n    var codeblock = new Stamplay.Codeblock(\"reservasanual\");\r\n    codeblock.run({}).then(function (response) {\r\n        $scope.data=[response];\r\n        $scope.$digest();\r\n    }, function( err ){\r\n      console.error(err);\r\n    });\r\n  };\r\n\r\n  // busca usuarios con rol parqueo\r\n  vm.buscarUsuariosParqueos = function(){\r\n    var codeblock = new Stamplay.Codeblock(\"usuariosparqueos\");\r\n    codeblock.run({}).then(function (res) {\r\n        console.log(res);\r\n        vm.usuariosparqueo = res;\r\n        $scope.$digest();\r\n    }, function( err ){\r\n      console.error(err);\r\n    });\r\n  }\r\n\r\n  // elimina usuarios con rol parqueo\r\n  vm.eliminarUsuario = function(user){\r\n    indexService.deleteUser(user).then(function(data) {\r\n      vm.buscarUsuariosParqueos();\r\n    });\r\n  }\r\n\r\n  // da formato de fecha hora\r\n  vm.estadia = function(i) {\r\n      var fecha = new Date(i);\r\n      return fecha.getDate() + '/' + fecha.getMonth() + '/' + fecha.getFullYear() + \" - \" + fecha.getHours() + ':' + (fecha.getMinutes() == 0 ? '00' : '30');\r\n  };\r\n\r\n\r\n  // FLAGS\r\n\r\n  $rootScope.esRolAdmin = function(){\r\n    if($rootScope.user){\r\n      return ($rootScope.user.rol == 'admin');\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  $rootScope.esRolParqueo = function(){\r\n    if($rootScope.user){\r\n      return ($rootScope.user.rol == 'parqueo');\r\n    } else{\r\n      return false;\r\n    }\r\n  }\r\n\r\n  $('.hora').bootstrapMaterialDatePicker({format : 'DD/MM/YYYY HH:mm', date: false});\r\n}\r\n","angular.module('MiParking').factory('navService', ['$rootScope',navService]);\r\n\r\nfunction navService(root) {\r\n    var service = {\r\n        buscarDisponibilidad: buscarDisponibilidad,\r\n        getParqueoUsuario : getParqueoUsuario,\r\n        reservar : reservar,\r\n        getParqueo : getParqueo\r\n    };\r\n\r\n    return service;\r\n\r\n    function buscarDisponibilidad(filter){    \t\t\r\n        var codeblock = new Stamplay.Codeblock(\"consultadisponibilidadparqueo\");\r\n        return codeblock.run(filter).then(function (response) {\r\n            return response;\r\n        }, function( err ){\r\n          \tconsole.error(err);\r\n            return null;\r\n        })\r\n    }\r\n\r\n    function getParqueoUsuario(user){\r\n        return Stamplay.Object(\"usuarioparqueo\").get({usuario:user.id})\r\n        .then(function(res) {\r\n          return res;\r\n        }, function(err) {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function reservar(reserva){\r\n    \treturn Stamplay.Object(\"reservar\").save(reserva)\r\n        .then(function(res) {\r\n          return res;\r\n        }, function(err) {\r\n            console.log(err);\r\n        })\r\n    }\r\n\r\n    function getParqueo(pId){\r\n    \treturn Stamplay.Object(\"parqueos\").get({_id:pId})\r\n    \t.then(function(res) {\r\n    \t\treturn res;\r\n      }, function( err ){\r\n          console.error(err);\r\n      })\r\n    }\r\n\r\n}","angular.module('MiParking').controller('navCtrl', ['$scope','$rootScope' , 'navService', 'AccountService', navCtrl]);\r\n\r\nfunction navCtrl($scope, $rootScope, navService){\r\n\r\n    var vm = this;\r\n\r\n    $.material.init();\r\n\r\n    vm.filter = {};\r\n    vm.reserva = {};\r\n    vm.validatePayphone = false;\r\n    vm.validate = false;\r\n    vm.montos = [];\r\n    vm.newusuario = {};\r\n\r\n    visibility = function(bool){\r\n      $('#hd').prop('disabled',bool);\r\n      $('#hh').prop('disabled',bool);\r\n      $('#tv').prop('disabled',bool);\r\n      $('#search').collapse(!bool?\"show\":\"hide\");\r\n      $('#searchPanel').collapse(!bool?\"hide\":\"show\");\r\n    }\r\n\r\n    vm.showDisponibilidad = function () {\r\n      vm.filter = {};\r\n      vm.reserva = {};\r\n      vm.validatePayphone = false;\r\n      vm.validate = false;\r\n      visibility(false);\r\n      $('#busqueda-dialog').modal();\r\n    };\r\n\r\n    // busca disponibilidad para reserva para el parqueo actual\r\n    vm.buscarDisponibilidad = function () {\r\n        navService.getParqueoUsuario($rootScope.user).then(function(res) {\r\n          vm.filter.pId = res.data[0].parqueo;\r\n          var params = {hD: new Date(vm.filter.hD), hH: new Date(vm.filter.hH), tV: vm.reserva.TipoVehiculo, pId : vm.filter.pId};\r\n          navService.buscarDisponibilidad(params).then(function(data) {\r\n            if(data){\r\n              console.log(data);\r\n              vm.reserva.puestoParqueo = data;\r\n              visibility(true);\r\n              vm.validate = true;\r\n              vm.reserva.Monto = calcularMonto();\r\n              $scope.$digest();\r\n            }\r\n          }, function( err ){\r\n              console.error(err);\r\n          });\r\n        }, function( err ){\r\n              console.error(err);\r\n        });\r\n    };\r\n\r\n    // calcula el monto del parqueo a reservar\r\n    calcularMonto = function(){\r\n      navService.getParqueo(vm.filter.pId[0]).then(function(res){\r\n          vm.reserva.Parqueo = res.data[0]._id;\r\n          vm.montos = [parseFloat(res.data[0].ValorXHoraL), parseFloat(res.data[0].ValorXHoraP), parseFloat(res.data[0].ValorXHoraM)];\r\n          return (r.formatHora(vm.filter.hH) - r.formatHora(vm.filter.hD)) * vm.montos[vm.reserva.TipoVehiculo];\r\n      }, function(error){\r\n         console.log(error);\r\n      });\r\n    }\r\n\r\n    // formato hora\r\n    $rootScope.formatHora = function(hora) {\r\n      hora = hora.split(':');\r\n      return parseFloat(hora[0] + '.' + hora[1].replace('3', '5'));\r\n    };\r\n\r\n\r\n    // segun modo de pago, visibilidad en pantalla\r\n    vm.cambiarModoPago = function(){\r\n      if(vm.filter.tP == '0'){\r\n        $('#pagoPanel').collapse(\"hide\");\r\n        vm.validatePayphone = false;\r\n      }else{\r\n        $('#pagoPanel').collapse(\"show\");\r\n        vm.validatePayphone = true;\r\n      }\r\n    };\r\n\r\n    // reserva un parqueo\r\n    vm.reservar = function(){\r\n      vm.reserva.HoraDesde = new Date(vm.filter.hD);\r\n      vm.reserva.HoraHasta = new Date(vm.filter.hH);\r\n      vm.reserva.Estado = 'P'; //TODO VER FORMA DE PAGO CON CELULAR Y COMO SE VAN A MANEJAR LOS ESTADOS\r\n      vm.reserva.Usuario = $rootScope.user.id; // VER SI PAGA POR PAYPHONE (DE SER ASI SE PUEDE GUARDAR EL USUARIO DEL CLIENTE)\r\n      navService.reservar(vm.reserva).then(function(res) {\r\n        if(res){\r\n          addAlert();  \r\n        }\r\n      }, function( err ){\r\n          console.error(err);\r\n      });\r\n    };\r\n\r\n    // TODO Cancela una reserva\r\n    vm.cancelarReserva = function(reserva){\r\n\r\n    };\r\n\r\n    \r\n    // confirma alta de usuario de tipo parqueo\r\n    vm.confirmNewUser = function(){\r\n      \r\n      $('user-dialog').modal('hide');\r\n    }\r\n\r\n    $rootScope.logout = function(){\r\n        var jwt = window.location.origin + \"-jwt\";\r\n        window.localStorage.removeItem(jwt);\r\n        $rootScope.user = false;\r\n    }\r\n}","angular.module('MiParking').factory('loginService', ['$rootScope',loginService]);\r\n\r\nfunction loginService(r) {\r\n    var service = {\r\n        login: login,\r\n        setRol : setRol\r\n    };\r\n     return service;\r\n\r\n    // login con Stamplay\r\n    function login(i){\r\n        return Stamplay.User.login(i)\r\n        .then(function(res) {\r\n          r.user = res;\r\n          setRol();\r\n          $('#login-dialog').modal('hide');        \r\n        }, function(err) {\r\n          console.log(err);\r\n        });\r\n    }\r\n    function setRol(){\r\n        return Stamplay.User.getRoles().then(function(res) {\r\n        for (var i = res.data.length - 1; i >= 0; i--) {\r\n          if(res.data[i]._id == r.user.givenRole){\r\n            r.user.rol = res.data[i].name;\r\n          }\r\n        }\r\n      }, function(err) {\r\n        console.error(err);\r\n      });\r\n    }\r\n   AccountService.currentUser()\r\n  .then(function(user) {\r\n      if (user || $rootScope.user) {\r\n          $rootScope.user = user ? user : $rootScope.user;\r\n          Stamplay.Object(\"usuarios\").get({owner: $rootScope.user._id})\r\n              .then(function(res) {\r\n                  $rootScope.user.perfil = res.data[0];\r\n                  vm.setRol();\r\n              }, function(err) {\r\n                  console.log(err);\r\n              });\r\n      }else{\r\n          console.log('No hay usuario logueado');\r\n          $('#login-dialog').modal();\r\n      }\r\n  });\r\n}","angular.module('MiParking').controller('loginCtrl',['$scope', '$rootScope', 'loginService', 'AccountService', loginCtrl]);\r\n\r\nfunction loginCtrl($scope, $rootScope, loginService, AccountService){\r\n\r\n\tvar vm = this;\r\n\t$.material.init();\r\n\t  // busca si hay usuario logueado\r\n  AccountService.currentUser()\r\n  .then(function(user) {\r\n      if (user || $rootScope.user) {\r\n          $rootScope.user = user ? user : $rootScope.user;\r\n          Stamplay.Object(\"usuarios\").get({owner: $rootScope.user._id})\r\n              .then(function(res) {\r\n                  $rootScope.user.perfil = res.data[0];\r\n                  vm.setRol();\r\n              }, function(err) {\r\n                  console.log(err);\r\n              });\r\n      }else{\r\n          console.log('No hay usuario logueado');\r\n      }\r\n  });\r\n\r\n  // login con Stamplay\r\n  vm.login = function() {\r\n      loginService.login(vm.credenciales).then(function(res){\r\n        getDatosRole();\r\n      });\r\n  };\r\n\r\n  // busca el tipo de rol del usuario logueado\r\n  vm.setRol = function(){\r\n    loginService.setRol().then(function(res){\r\n        getDatosRole();\r\n    });\r\n  };\r\n\r\n  // obtiene la informacion del usuario segun el rol\r\n  getDatosRole = function(){\r\n    $scope.$apply();\r\n    if($rootScope.user.rol == 'admin'){\r\n      vm.buscarUsuariosParqueos();\r\n    }else{\r\n      vm.buscarReservasDia();\r\n      vm.estadisticasAnual();\r\n    }\r\n  };\r\n}"," ","angular.module('MiParking', ['ui.router', 'chart.js', 'easypiechart'])\r\n    .factory('AccountService', [\"$q\", function($q) {\r\n        return {\r\n            currentUser: function() {\r\n                var def = $q.defer();\r\n                Stamplay.User.currentUser()\r\n                    .then(function(response) {\r\n                        if (response.user === undefined) {\r\n                            def.resolve(false);\r\n                        } else {\r\n                            def.resolve(response.user);\r\n                        }\r\n                    }, function(error) {\r\n                        def.reject();\r\n                    });\r\n                return def.promise;\r\n            }\r\n        };\r\n    }])\r\n  .config(['$stateProvider','$urlRouterProvider',function($stateProvider, $urlRouterProvider) {\r\n      $urlRouterProvider.otherwise(\"/\");\r\n      $stateProvider\r\n      .state('home', {\r\n        url: '/',\r\n        sticky: true,\r\n        dsr: true,\r\n        views: {\r\n          'loginView': {\r\n            templateUrl: 'templates/login.html',\r\n            controller: 'loginCtrl as ctrl'\r\n          },\r\n          'navView': {\r\n            templateUrl: 'templates/nav.html',\r\n            controller: 'navCtrl as ctrl'\r\n          },\r\n          'contentView': {\r\n            templateUrl: 'templates/index.html',\r\n            controller: 'indexCtrl as ctrl'\r\n          }\r\n        }\r\n      });\r\n    }]);"]}