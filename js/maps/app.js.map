{"version":3,"sources":["indexService.js","indexCtrl.js","navService.js","navCtrl.js","main.js","app.js"],"names":["indexService","r","login","i","Stamplay","User","then","res","user","$","modal","getResPorDia","err","console","log","data","usuario","codeblock","Codeblock","run","response","error","service","buscarPorDia","indexCtrl","$scope","$rootScope","AccountService","vm","this","material","init","credenciales","reservas","percentRes","percentDis","options","animate","duration","enabled","barColor","scaleColor","lineWidth","size","lineCap","labels","series","onClick","points","evt","datasetOverride","yAxisID","optionsLine","responsive","scales","yAxes","id","type","display","position","currentUser","Object","get","owner","_id","perfil","buscarReservasDia","estadisticasAnual","$digest","estadia","fecha","Date","getDate","getMonth","getFullYear","getHours","getMinutes","bootstrapMaterialDatePicker","format","date","navService","root","buscarDisponibilidad","filter","getParqueoUsuario","navCtrl","resultBusq","showDisponibilidad","returnnavService","pId","parqueo","hD","hH","angular","module","factory","$q","def","defer","undefined","resolve","reject","promise","config","$stateProvider","$urlRouterProvider","otherwise","state","url","sticky","dsr","views","navView","templateUrl","controller","contentView"],"mappings":"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","file":"../app.js","sourcesContent":["angular.module('MiParking').factory('indexService', ['$rootScope',indexService]);\n\nfunction indexService(r) {\n    var service = {\n        buscarPorDia: getResPorDia,\n        login: login\n    };\n\n    return service;\n\n    // login con Stamplay\n    function login(i){\n        Stamplay.User.login(i)\n        .then(function(res) {\n          r.user = res;\n          $('#login-dialog').modal('hide');\n          return getResPorDia(res);\n        }, function(err) {\n          console.log(err);\n        })\n    }\n\n    // todas las reservas del dia\n    function getResPorDia(user){\n        if(user){\n    \t\tvar data = {usuario: user};\n    \t\t\n            var codeblock = new Stamplay.Codeblock(\"consultarreservas\");\n            return codeblock.run(data).then(function (response) {\n                return response;\n            }, function( err ){\n              console.error(err);\n                return null;\n            });\n        }else{\n        \t$('#login-dialog').modal();\n        }\n    }\n\n}","angular.module('MiParking').controller('indexCtrl',['$scope', '$rootScope', 'indexService', 'AccountService', indexCtrl]);\n\nfunction indexCtrl($scope, $rootScope, indexService, AccountService){\n\n\tvar vm = this;\n\n\t$.material.init();\n\n  $scope.credenciales = {};\n  vm.reservas = [];\n\n  $scope.percentRes = 65;\n  $scope.percentDis = 35;\n\n  $scope.options = {\n    animate:{duration:1000,\n      enabled:true}, barColor:'RED', scaleColor: '#e8eff0', lineWidth:10, size:150, lineCap:'butt' \n    };\n\n  $scope.labels = [\"Enero\", \"Febrero\", \"Marzo\", \"Abril\", \"Mayo\", \"Junio\", \"Julio\", \"Agosto\",\"Septiembre\",\"Octubre\",\"Noviembre\",\"Diciembre\"];\n  $scope.series = ['Reservas'];\n  $scope.data = [];\n\n  $scope.onClick = function (points, evt) {\n    console.log(points, evt);\n  };\n\n  $scope.datasetOverride = [{ yAxisID: 'y-axis-1' }];\n\n  $scope.optionsLine = {\n    responsive: true,\n    scales: {\n      yAxes: [\n        {\n          id: 'y-axis-1',\n          type: 'linear',\n          display: true,\n          position: 'left'\n        }\n      ]\n    }\n  };\n\n  // busca si hay usuario logueado\n  AccountService.currentUser()\n  .then(function(user) {\n      if (user || $rootScope.user) {\n          $rootScope.user = user ? user : $rootScope.user;\n          Stamplay.Object(\"usuarios\").get({owner: $rootScope.user._id})\n              .then(function(res) {\n                  $rootScope.user.perfil = res.data[0];\n                  vm.buscarReservasDia();\n                  vm.estadisticasAnual();\n              }, function(err) {\n                  console.log(err);\n              });\n      }else{\n          console.log('No hay usuario logueado');\n          $('#login-dialog').modal();\n      }\n  });\n\n  // login con Stamplay\n  vm.login = function() {\n      indexService.login(vm.credenciales);\n  };\n\n  // obtiene todas las reserva del dia para el usuario logueado\n  vm.buscarReservasDia = function(){\n    indexService.buscarPorDia($rootScope.user).then(function(data) {\n      console.log(data);\n      vm.reservas = data;\n      $scope.$digest();\n    });\n  };\n\n  // busca estadísticas del año actual\n  vm.estadisticasAnual = function(){\n    var codeblock = new Stamplay.Codeblock(\"reservasanual\");\n    codeblock.run({}).then(function (response) {\n        $scope.data=[response];\n    }, function( err ){\n      console.error(err);\n    });\n  };\n\n\n  vm.estadia = function(i) {\n      var fecha = new Date(i);\n      return fecha.getDate() + '/' + fecha.getMonth() + '/' + fecha.getFullYear() + \" - \" + fecha.getHours() + ':' + (fecha.getMinutes() == 0 ? '00' : '30');\n  };\n\n  $('.hora').bootstrapMaterialDatePicker({format : 'DD/MM/YYYY HH:mm', date: false});\n}\n","angular.module('MiParking').factory('navService', ['$rootScope',navService]);\n\nfunction navService(root) {\n    var service = {\n        buscarDisponibilidad: buscarDisponibilidad,\n        getParqueoUsuario : getParqueoUsuario\n    };\n\n    return service;\n\n    function buscarDisponibilidad(filter){    \t\t\n        var codeblock = new Stamplay.Codeblock(\"consultadisponibilidadparqueo\");\n        return codeblock.run(filter).then(function (response) {\n            return response;\n        }, function( err ){\n          \tconsole.error(err);\n            return null;\n        }); \n    }\n\n    function getParqueoUsuario(user){\n        return Stamplay.Object(\"usuarioparqueo\").get(user.id)\n        .then(function(res) {\n          return res;\n        }, function(err) {\n            console.log(err);\n        }) \n    }\n\n}","angular.module('MiParking').controller('navCtrl', ['$scope','$rootScope' , 'navService', 'AccountService', navCtrl]);\n\nfunction navCtrl($scope, $rootScope, navService){\n\n    var vm = this;\n\n    $.material.init();\n\n    vm.filter = {};\n    vm.resultBusq = [];\n\n    vm.showDisponibilidad = function () {\n      $('#busqueda-dialog').modal();\n    };\n\n    vm.buscarDisponibilidad = function () {\n      returnnavService.getParqueoUsuario($rootScope.user).then(function(res) {\n        vm.filter.pId = res.parqueo;\n        vm.filter.hD =  new Date(vm.filter.hD);\n        vm.filter.hH =  new Date(vm.filter.hH);\n        navService.buscarDisponibilidad(vm.filter).then(function(data) {\n          console.log(data);\n          vm.resultBusq = data;\n          $('#busqueda-dialog').modal('hide');\n          $scope.$digest();\n        });\n      });\n    };\n}"," ","angular.module('MiParking', ['ui.router', 'chart.js', 'easypiechart'])\n    .factory('AccountService', [\"$q\", function($q) {\n        return {\n            currentUser: function() {\n                var def = $q.defer();\n                Stamplay.User.currentUser()\n                    .then(function(response) {\n                        if (response.user === undefined) {\n                            def.resolve(false);\n                        } else {\n                            def.resolve(response.user);\n                        }\n                    }, function(error) {\n                        def.reject();\n                    });\n                return def.promise;\n            }\n        };\n    }])\n  .config(['$stateProvider','$urlRouterProvider',function($stateProvider, $urlRouterProvider) {\n      $urlRouterProvider.otherwise(\"/\");\n      $stateProvider\n      .state('home', {\n        url: '/',\n        sticky: true,\n        dsr: true,\n        views: {\n          'navView': {\n            templateUrl: 'templates/nav.html',\n            controller: 'navCtrl as ctrl'\n          },\n          'contentView': {\n            templateUrl: 'templates/index.html',\n            controller: 'indexCtrl as ctrl'\n          }\n        }\n      });\n    }]);"]}