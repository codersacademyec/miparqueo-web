{"version":3,"sources":["indexService.js","indexCtrl.js","main.js","app.js"],"names":["indexService","login","i","Stamplay","User","socialLogin","socialProvider","getResPorDia","user","data","usuario","periodoDesde","Date","Object","get","then","res","err","console","log","$","modal","service","buscarPorDia","indexCtrl","$scope","AccountService","vm","this","material","init","credenciales","percent","options","animate","duration","enabled","barColor","scaleColor","lineWidth","size","lineCap","labels","series","onClick","points","evt","datasetOverride","yAxisID","optionsLine","responsive","scales","yAxes","id","type","display","position","currentUser","owner","_id","perfil","buscarReservasDia","error","angular","module","constant","factory","$q","def","defer","response","undefined","resolve","reject","promise","config","$stateProvider","$urlRouterProvider","otherwise","state","url","sticky","dsr","views","navView","templateUrl","contentView","controller"],"mappings":"AAEA,QAAAA,gBASA,QAAAC,GAAAC,GACAC,SAAAC,KAAAC,YAAAC,eAAAJ,IAIA,QAAAK,GAAAC,GACA,GAAAA,EAAA,CACA,GAAAC,IAAAC,QAAAF,EAAAG,aAAA,GAAAC,MACAT,UAAAU,OAAA,YAAAC,IAAAL,GACAM,KAAA,SAAAC,KAEA,SAAAC,GACAC,QAAAC,IAAAF,SAGAG,GAAA,iBAAAC,QAvBA,GAAAC,IACAC,aAAAhB,EACAN,MAAAA,EAGA,OAAAqB,GCNA,QAAAE,WAAAC,EAAAzB,EAAAM,EAAAoB,GAEA,GAAAC,GAAAC,IAEAR,GAAAS,SAAAC,OAEAL,EAAAM,gBAEAN,EAAAO,QAAA,GACAP,EAAAQ,SACAC,SAAAC,SAAA,IACAC,SAAA,GAAAC,SAAA,MAAAC,WAAA,UAAAC,UAAA,GAAAC,KAAA,IAAAC,QAAA,QAGAhB,EAAAiB,QAAA,UAAA,WAAA,QAAA,QAAA,MAAA,OAAA,QACAjB,EAAAkB,QAAA,YAEAlB,EAAAhB,OAAA,GAAA,GAAA,GAAA,GAAA,GAAA,GAAA,KAEAgB,EAAAmB,QAAA,SAAAC,EAAAC,GACA5B,QAAAC,IAAA0B,EAAAC,IAGArB,EAAAsB,kBAAAC,QAAA,aAEAvB,EAAAwB,aACAC,YAAA,EACAC,QACAC,QAEAC,GAAA,WACAC,KAAA,SACAC,SAAA,EACAC,SAAA,WAOA9B,EAAA+B,cACA1C,KAAA,SAAAP,GACAA,GAAAiB,EAAAjB,MACAiB,EAAAjB,KAAAA,EAAAA,EAAAiB,EAAAjB,KACAL,SAAAU,OAAA,YAAAC,KAAA4C,MAAAjC,EAAAjB,KAAAmD,MACA5C,KAAA,SAAAC,GACAS,EAAAjB,KAAAoD,OAAA5C,EAAAP,KAAA,GACAkB,EAAAkC,qBACA,SAAA5C,GACAC,QAAAC,IAAAF,OAGAC,QAAA4C,MAAA,2BACA1C,EAAA,iBAAAC,WAKAM,EAAA1B,MAAA,WACAD,EAAAC,MAAA8B,eAIAJ,EAAAkC,kBAAA,WACA7D,EAAAuB,aAAAE,EAAAjB,OClEAuD,QAAAC,OAAA,aAAA,YAAA,WAAA,iBCAAC,SAAA,kBAAA,WAAA,WACAC,QAAA,kBAAA,KAAA,SAAAC,GACA,OACAV,YAAA,WACA,GAAAW,GAAAD,EAAAE,OAWA,OAVAlE,UAAAC,KAAAqD,cACA1C,KAAA,SAAAuD,GACAC,SAAAD,EAAA9D,KACA4D,EAAAI,SAAA,GAEAJ,EAAAI,QAAAF,EAAA9D,OAEA,SAAAsD,GACAM,EAAAK,WAEAL,EAAAM,aAIAC,QAAA,iBAAA,qBAAA,SAAAC,EAAAC,GACAA,EAAAC,UAAA,KACAF,EACAG,MAAA,QACAC,IAAA,IACAC,QAAA,EACAC,KAAA,EACAC,OACAC,SACAC,YAAA,sBAEAC,aACAD,YAAA,uBACAE,WAAA,mBHhCAxB,QAAAC,OAAA,aAAAE,QAAA,gBAAAlE,eCAA+D,QAAAC,OAAA,aAAAuB,WAAA,aAAA,SAAA,eAAA,iBAAA,iBAAA/D","file":"../app.js","sourcesContent":["angular.module('MiParking').factory('indexService', [indexService]);\r\n\r\nfunction indexService() {\r\n    var service = {\r\n        buscarPorDia: getResPorDia,\r\n        login: login\r\n    };\r\n\r\n    return service;\r\n\r\n    // login con Stamplay\r\n    function login(i){\r\n        Stamplay.User.socialLogin(socialProvider[i]);    \r\n    }\r\n\r\n    // todas las reservas del dia\r\n    function getResPorDia(user){\r\n        if(user){\r\n    \t\tvar data = {usuario: user, periodoDesde: new Date()};\r\n    \t\tStamplay.Object(\"reservas\").get(data)\r\n\t        .then(function(res) {\r\n\t          // success\r\n\t        }, function(err) {\r\n\t            console.log(err);\r\n\t        }) \r\n        }else{\r\n        \t$('#login-dialog').modal();\r\n        }\r\n    }\r\n\r\n}","angular.module('MiParking').controller('indexCtrl',['$scope','indexService','socialProvider', 'AccountService', indexCtrl]);\r\n\r\nfunction indexCtrl($scope, indexService, socialProvider, AccountService){\r\n\r\n\tvar vm = this;\r\n\r\n\t$.material.init();\r\n\r\n  $scope.credenciales = {};\r\n\r\n  $scope.percent = 65;\r\n  $scope.options = {\r\n    animate:{duration:1000,\r\n      enabled:true}, barColor:'RED', scaleColor: '#e8eff0', lineWidth:10, size:150, lineCap:'butt' \r\n    };\r\n\r\n  $scope.labels = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\"];\r\n  $scope.series = ['Series A'];\r\n\r\n  $scope.data = [[65, 59, 80, 81, 56, 55, 40]];\r\n\r\n  $scope.onClick = function (points, evt) {\r\n    console.log(points, evt);\r\n  };\r\n\r\n  $scope.datasetOverride = [{ yAxisID: 'y-axis-1' }];\r\n\r\n  $scope.optionsLine = {\r\n    responsive: true,\r\n    scales: {\r\n      yAxes: [\r\n        {\r\n          id: 'y-axis-1',\r\n          type: 'linear',\r\n          display: true,\r\n          position: 'left'\r\n        }\r\n      ]\r\n    }\r\n  };\r\n\r\n  // busca si hay usuario logueado\r\n  AccountService.currentUser()\r\n  .then(function(user) {\r\n      if (user || $scope.user) {\r\n          $scope.user = user ? user : $scope.user;\r\n          Stamplay.Object(\"usuarios\").get({owner: $scope.user._id})\r\n              .then(function(res) {\r\n                  $scope.user.perfil = res.data[0];\r\n                  vm.buscarReservasDia();\r\n              }, function(err) {\r\n                  console.log(err);\r\n              });\r\n      }else{\r\n          console.error('No hay usuario logueado');\r\n          $('#login-dialog').modal();\r\n      }\r\n  });\r\n\r\n  // login con Stamplay\r\n  vm.login = function() {\r\n      indexService.login(credenciales);\r\n  };\r\n\r\n  // obtiene todas las reserva del dia para el usuario logueado\r\n  vm.buscarReservasDia = function(){\r\n    indexService.buscarPorDia($scope.user);\r\n  }\r\n\r\n}\r\n"," ","angular.module('MiParking', ['ui.router', 'chart.js', 'easypiechart'])\r\n  .constant(\"socialProvider\", [\"facebook\", \"google\"])\r\n    .factory('AccountService', [\"$q\", function($q) {\r\n        return {\r\n            currentUser: function() {\r\n                var def = $q.defer();\r\n                Stamplay.User.currentUser()\r\n                    .then(function(response) {\r\n                        if (response.user === undefined) {\r\n                            def.resolve(false);\r\n                        } else {\r\n                            def.resolve(response.user);\r\n                        }\r\n                    }, function(error) {\r\n                        def.reject();\r\n                    });\r\n                return def.promise;\r\n            }\r\n        };\r\n    }])\r\n  .config(['$stateProvider','$urlRouterProvider',function($stateProvider, $urlRouterProvider) {\r\n      $urlRouterProvider.otherwise(\"/\");\r\n      $stateProvider\r\n      .state('home', {\r\n        url: '/',\r\n        sticky: true,\r\n        dsr: true,\r\n        views: {\r\n          'navView': {\r\n            templateUrl: 'templates/nav.html'\r\n          },\r\n          'contentView': {\r\n            templateUrl: 'templates/index.html',\r\n            controller: 'indexCtrl'\r\n          }\r\n        }\r\n      });\r\n    }]);"]}